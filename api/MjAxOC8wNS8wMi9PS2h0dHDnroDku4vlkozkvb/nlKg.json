{"title":"OKhttp简介和使用","date":"2018-05-01T16:00:00.000Z","link":"2018/05/02/OKhttp简介和使用","tags":["Android"],"updated":"2019-10-25T08:36:42.127Z","content":"<h2 id=\"简介\"><strong>简介</strong><a href=\"2018/05/02/OKhttp简介和使用#简介\"></a></h2><p>android网络框架之OKhttp<br>一个处理网络请求的开源项目,是安卓端最火热的轻量级框架,由移动支付Square公司贡献(该公司还贡献了Picasso)<br>用于替代HttpUrlConnection和Apache HttpClient</p>\n<h4 id=\"官方资料\">官方资料<a href=\"2018/05/02/OKhttp简介和使用#官方资料\"></a></h4><blockquote>\n<p><a href=\"http://square.github.io/okhttp/\" target=\"_blank\" rel=\"noopener\">官方介绍</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://github.com/square/okhttp\" target=\"_blank\" rel=\"noopener\">github源码</a></p>\n</blockquote>\n<h4 id=\"优势\">优势<a href=\"2018/05/02/OKhttp简介和使用#优势\"></a></h4><ul>\n<li>允许连接到同一个主机地址的所有请求,提高请求效率</li>\n<li>共享Socket,减少对服务器的请求次数  </li>\n</ul>\n<ul>\n<li>通过连接池,减少了请求延迟</li>\n<li>缓存响应数据来减少重复的网络请求  </li>\n<li>减少了对数据流量的消耗</li>\n<li>自动处理GZip压缩</li>\n</ul>\n<h4 id=\"功能\">功能<a href=\"2018/05/02/OKhttp简介和使用#功能\"></a></h4><ul>\n<li>get,post请求</li>\n<li>文件的上传下载</li>\n<li>加载图片(内部会图片大小自动压缩)</li>\n<li>支持请求回调，直接返回对象、对象集合</li>\n<li>支持session的保持<blockquote>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"效果图\">效果图<a href=\"2018/05/02/OKhttp简介和使用#效果图\"></a></h4><p><img src=\"https://github.com/jccjd/L_OkHttp/blob/master/app/src/main/res/drawable/l1525091941778.gif?raw=true\" alt=\"image\" class=\"article-img\"></p>\n<h4 id=\"相关使用\">相关使用<a href=\"2018/05/02/OKhttp简介和使用#相关使用\"></a></h4><blockquote>\n<p>添加依赖（build.gradle）</p>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.squareup.okhttp3:okhttp:3.10.0&apos;</span><br></pre></td></tr></table></div></figure>\n<blockquote>\n<p>添加网络设置</p>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;</span><br></pre></td></tr></table></div></figure>\n\n\n<h6 id=\"Get\">Get<a href=\"2018/05/02/OKhttp简介和使用#Get\"></a></h6><ol>\n<li>通过build来创建一个Request请求，可以不设置get默认方法就是get<br>url是访问地址（BASE_URL这里用的是虚拟机的基地址）</li>\n</ol>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String BASE_URL = &quot;http://10.0.2.2/get.php?key=get&quot;;</span><br><span class=\"line\">        OkHttpClient okHttpClient = new OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">        Request request = new Request.Builder()</span><br><span class=\"line\">        .url(BASE_URL)</span><br><span class=\"line\">        .get()</span><br><span class=\"line\">        .build();</span><br></pre></td></tr></table></div></figure>\n\n\n<ol start=\"2\">\n<li>创建Call对象参数就是Request请求对象发送请求</li>\n</ol>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Call call = okHttpClient.newCall(request);</span><br><span class=\"line\">call.enqueue(callback);</span><br></pre></td></tr></table></div></figure>\n<p>3.然后以异步方式执行请求</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">okHttpUtil.requestGet(new Callback() &#123;</span><br><span class=\"line\">           //请求失败执行方法</span><br><span class=\"line\">           @Override</span><br><span class=\"line\">           public void onFailure(Call call, IOException e) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           //请求成功执行方法，request就是从服务器得到参数，request.body()可以得到任意类型，字符串，字节。</span><br><span class=\"line\">           @Override</span><br><span class=\"line\">           public void onResponse(Call call, Response response) throws IOException &#123;</span><br><span class=\"line\">               String strRet = response.body().string();</span><br><span class=\"line\">               //将数据存到Handler中</span><br><span class=\"line\">               Message msg = mHandler.obtainMessage();</span><br><span class=\"line\">               msg.obj = &quot;Get方法获取数据 ----&gt; &quot;+&quot;  &quot; + strRet;</span><br><span class=\"line\">               mHandler.sendMessage(msg);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></div></figure>\n<h6 id=\"Post\">Post<a href=\"2018/05/02/OKhttp简介和使用#Post\"></a></h6><p>Post与get类似 post的参数是包含在请去体中所以需要Formbody添加键值对</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FormBody formBody = new FormBody.Builder().add(&quot;key&quot;, &quot;Post&quot;).build();</span><br></pre></td></tr></table></div></figure>\n<p>其他部分大致相同</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void requestPost(Callback callback) &#123;</span><br><span class=\"line\">        String BASE_URL = &quot;http://10.0.2.2/post.php&quot;;</span><br><span class=\"line\">        OkHttpClient okHttpClient = new OkHttpClient();</span><br><span class=\"line\">        FormBody formBody = new FormBody</span><br><span class=\"line\">                .Builder()</span><br><span class=\"line\">                .add(&quot;key&quot;, &quot;Post&quot;)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        Request request = new Request</span><br><span class=\"line\">                .Builder()</span><br><span class=\"line\">                .url(BASE_URL)</span><br><span class=\"line\">                .post(formBody)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"></span><br><span class=\"line\">        Call call = okHttpClient.newCall(request);</span><br><span class=\"line\">        call.enqueue(callback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     private void httpPost() &#123;</span><br><span class=\"line\">        okHttpUtil.requestGet(new Callback() &#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void onFailure(Call call, IOException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void onResponse(Call call, Response response) throws IOException &#123;</span><br><span class=\"line\">                String strRet = response.body().string();</span><br><span class=\"line\">                Message msg = mHandler.obtainMessage();</span><br><span class=\"line\">                msg.obj = &quot;Post方法获取数据 ---&gt; &quot;+&quot;  &quot; +strRet;</span><br><span class=\"line\">                mHandler.sendMessage(msg);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></div></figure>\n<p>源码见我的github –&gt; <a href=\"https://github.com/jccjd/L_OkHttp/\" target=\"_blank\" rel=\"noopener\">jccjd</a></p>\n","prev":{"title":"Retrofit","link":"2018/05/14/Retrofit"},"next":{"title":"linux下配置git","link":"2017/12/07/linux下配置git"},"plink":"http://jccjd.top/2018/05/02/OKhttp简介和使用/","toc":[{"title":"<strong>简介</strong>","id":"简介","index":"1"}],"copyright":{"link":"<a href=\"http://jccjd.top/2018/05/02/OKhttp简介和使用/\" title=\"OKhttp简介和使用\">http://jccjd.top/2018/05/02/OKhttp简介和使用/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}