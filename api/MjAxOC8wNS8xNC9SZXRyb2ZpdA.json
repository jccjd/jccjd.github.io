{"title":"Retrofit","date":"2018-05-13T16:00:00.000Z","link":"2018/05/14/Retrofit","tags":["Android"],"updated":"2019-10-25T08:38:03.256Z","content":"<h5 id=\"Json是什么？\">Json是什么？<a href=\"2018/05/14/Retrofit#Json是什么？\"></a></h5><p>json(Javascript Object Notation)是一种轻量级的数据交换格式，相比于xml这种数据交换格式来说，<br>因为解析xml比较的复杂，而且需要编写大段的代码，所以客户端和服务器的数据交换格式往往通过json来进行交换。<br>尤其是对于web开发来说，json数据格式在客户端直接可以通过javascript来进行解析。</p>\n<p><img src=\"http://www.json.org/object.gif\" alt=\"image\" class=\"article-img\"></p>\n<p>json一共有两种数据结构，一种是以 (key/value)对形式存在的无序的jsonObject对象，<br>一个对象以“{”（左花括号）开始，“}”（右花括号）结束。每个“名称”后跟一个“:”（冒号）；<br>“‘名称/值’ 对”之间使用“,”（逗号）分隔。</p>\n<p><img src=\"http://www.json.org/array.gif\" alt=\"image\" class=\"article-img\"></p>\n<p>例如：{“name”: “xiaoluo”}， 这就是一个最简单的json对象，对于这种数据格式，key值必须要是string类型，<br>而对于value，则可以是string、number、object、array等数据类型：</p>\n<p><img src=\"http://www.json.org/value.gif\" alt=\"image\" class=\"article-img\"></p>\n<p>关于详尽数据格式参见 –&gt; <a href=\"https://note.youdao.com/\" target=\"_blank\" rel=\"noopener\">http://www.json.org/json-zh.html</a></p>\n<h5 id=\"概述\">概述<a href=\"2018/05/14/Retrofit#概述\"></a></h5><p>本文主要阐述的有关于用retrofit来获取服务器端json数据, 并进行解析，相关demo在(<a href=\"https://github.com/jccjd/L_json)上\" target=\"_blank\" rel=\"noopener\">https://github.com/jccjd/L_json)上</a></p>\n<hr>\n<p>Retrofit是一套RESTful架构的Android(Java)客户端实现，基于注解，提供JSON to POJO(Plain Ordinary Java Object,简单Java对象)，POJO to JSON，网络请求(POST，GET,PUT，DELETE等)封装</p>\n<p><strong>类结构如图</strong></p>\n<p><img src=\"https://github.com/jccjd/L_json/blob/master/app/src/main/res/drawable/buhuo.PNG?raw=true\" alt=\"image\" class=\"article-img\"></p>\n<p>先添加依赖</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.squareup.retrofit2:retrofit:2.4.0&apos;</span><br><span class=\"line\">compile &apos;com.squareup.retrofit2:converter-gson:2.4.0&apos;</span><br></pre></td></tr></table></div></figure>\n\n<p>需要解析的json字符是这样的</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"> for ($i=0; $i &lt; 5 ; $i++) &#123;</span><br><span class=\"line\"> \t# code...</span><br><span class=\"line\"> \t$newsArray[$i] = array(&apos;title&apos;=&gt;&apos;biaoti&apos;.$i,&apos;content&apos;=&gt;&apos;neirong&apos;,&apos;newsImageUrl&apos;=&gt;&apos;http//10.0.2.2/image/news/1.jpg&apos;);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> $jsonArray = array(&apos;code&apos;=&gt;0,&apos;message&apos;=&gt;&apos;success&apos;,&apos;data&apos;=&gt;$newsArray);</span><br><span class=\"line\"> echo json_encode($jsonArray);</span><br></pre></td></tr></table></div></figure>\n<p>httpResult通过定义泛型</p>\n<p>利用接口和注解创建ApiService</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface ApiService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @GET(&quot;json.php&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    Call&lt;HttpResult&lt;List&lt;news&gt;&gt;&gt; getNews();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n\n<p>然后是简单的布局就一个button绑定事件 和 一个TextView显示获取的数据</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;LinearLayout</span><br><span class=\"line\">        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">        xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class=\"line\">        xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">        android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">        android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">        android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">        tools:context=&quot;com.example.lenovo.l_json.MainActivity&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:id=&quot;@+id/btn_Json&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">            android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">            android:id=&quot;@+id/tv_show_msg&quot;</span><br><span class=\"line\">            android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">            android:text=&quot;Hello World!&quot;</span><br><span class=\"line\">            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;</span><br><span class=\"line\">            app:layout_constraintLeft_toLeftOf=&quot;parent&quot;</span><br><span class=\"line\">            app:layout_constraintRight_toRightOf=&quot;parent&quot;</span><br><span class=\"line\">            app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></div></figure>\n","prev":{"title":"Rxjava的观察者模式","link":"2018/05/28/Rxjava的观察者模式"},"next":{"title":"OKhttp简介和使用","link":"2018/05/02/OKhttp简介和使用"},"plink":"http://jccjd.top/2018/05/14/Retrofit/","reward":true,"copyright":{"link":"<a href=\"http://jccjd.top/2018/05/14/Retrofit/\" title=\"Retrofit\">http://jccjd.top/2018/05/14/Retrofit/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}