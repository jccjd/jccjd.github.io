{"title":"垃圾回收GC","date":"2019-07-08T16:00:00.000Z","date_formatted":{"ll":"Jul 9, 2019","L":"07/09/2019","MM-DD":"07-09"},"link":"2019/07/09/垃圾回收GC","tags":["Python"],"updated":"2020-02-09T08:37:02.000Z","content":"<h3 id=\"数字和字符\">数字和字符<a href=\"#数字和字符\" title=\"数字和字符\"></a></h3><ul><li>小整数[-5,257)共用对象，常驻内存</li>\n<li>单个字符共用对象，常驻内存</li>\n<li>单个单词，不可修改，默认开启intern机制，共用对象，引用计数为0，则销毁 </li>\n</ul><h3 id=\"garbage-collection\">Garbage collection<a href=\"#garbage-collection\" title=\"Garbage collection\"></a></h3><p>python的垃圾收集策略有三种</p>\n<ul><li>引用计数机制</li>\n<li>标记清除</li>\n<li>分代收集</li>\n</ul><h3 id=\"引用计数\">引用计数<a href=\"#引用计数\" title=\"引用计数\"></a></h3><p>主要是使用引用计数，循环引用导致内存泄露</p>\n<h3 id=\"标记-清除：\">标记-清除：<a href=\"#标记-清除：\" title=\"标记-清除：\"></a></h3><p>标记清除就是用来解决循环引用的问题的只有容器对象才会出现引用循环，比如列表、字典、类、元组。</p>\n<h3 id=\"分代回收\">分代回收<a href=\"#分代回收\" title=\"分代回收\"></a></h3><p>GC的阈值，所谓阈值就是一个临界点的值。随着你的程序运行，Python解释器保持对新创建的对象，以及因为引用计数为零而被释放掉的<br>对象的追踪。从理论上说，创建==释放数量应该是这样子。但是如果存在循环引用的                                                                    话，肯定是创建&gt;释放数量，当创建数与释放数量的<br>差值达到规定的阈值的时候就需要分代会收</p>\n<blockquote>\n<p>垃圾回收=垃圾检测+释放</p>\n</blockquote>\n<p>分代回收思想将对象分为三代（generation 0,1,2），0代表幼年对象，1代表青年对象，2代表老年对象。根据弱代假说（越年轻的对象<br>越容易死掉，老的对象通常会存活更久。）</p>\n<p>新生的对象被放入0代，如果该对象在第0代的一次gc垃圾回收中活了下来，那么它就被放到第1代里面（它就升级了）。如果第1代里面的<br>对象在第1代的一次gc垃圾回收中活了下来，它就被放到第2代里面。</p>\n<p>gc.set_threshold(threshold0[,threshold1[,threshold2]])设置gc每一代垃圾回收所触发的阈值。<br>从上一次第0代gc后，如果分配对象的个数减去释放对象的个数大于threshold0，那么就会对第0代中的对象进行gc垃圾回收检查。 从上一次第1代gc后，如过第0代被gc垃圾回收的次数大于threshold1，那么就会对第1代中的对象进行gc垃圾回<br>收检查。<br>同样，从上一次第2代gc后，如过第1代被gc垃圾回收的次数大于threshold2，那么就会对第2代中的对象进行gc垃圾回收检查。</p>\n","prev":{"title":"socket","link":"2019/07/09/socket"},"next":{"title":"文件读写","link":"2019/07/09/文件读写"},"plink":"http://yoursite.com/2019/07/09/垃圾回收GC/","toc":[{"id":"数字和字符","title":"数字和字符","index":"1"},{"id":"garbage-collection","title":"Garbage collection","index":"2"},{"id":"引用计数","title":"引用计数","index":"3"},{"id":"标记-清除：","title":"标记-清除：","index":"4"},{"id":"分代回收","title":"分代回收","index":"5"}],"copyright":{"link":"<a href=\"http://yoursite.com/2019/07/09/垃圾回收GC/\" title=\"垃圾回收GC\">http://yoursite.com/2019/07/09/垃圾回收GC/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}