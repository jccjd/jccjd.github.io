{"title":"nginx+uwsgi_django配置","date":"2019-09-24T16:00:00.000Z","date_formatted":{"ll":"Sep 25, 2019","L":"09/25/2019","MM-DD":"09-25"},"link":"2019/09/25/nginx+uwsgi_django配置","tags":["docs","nginx","uwsgi"],"updated":"2020-02-09T08:37:34.000Z","content":"<p>在服务器端配置nginx + uwsgi+ django,简单来讲就是将django的项目通过nginx跑起来，在阅读djang<br>文档的时候就读到一句非常有意思的话，</p>\n<blockquote>\n<p>我们是框架方面的专家， 但在在服务方面不是</p>\n</blockquote>\n<p>在实际的项目中显然是不能使用django自带的wsgi去跑的， 我们希望的是由nginx来提供服务的.</p>\n<h3 id=\"下载uwsgi\">下载uwsgi<a href=\"#下载uwsgi\" title=\"下载uwsgi\"></a></h3><p>首先三者之间的顺序是 nginx -&gt; （uwsgi -&gt;djangoapp）, uwsgi 和写的django项目相连，在启动项目时，不在是由 manage.py 去启动项目，而是在项目根目录下配置的<code>uwsgi.ini</code> 用uwsgi去运行这个文件，来运行项目， 下载 uwsgi,可以直接通过pip安装</p>\n<pre><code>pip install uwsgi\n\nuwsgi uwsgi.ini # 运行项目</code></pre>\n<p>这时候显然还是不能运行的要配置 <code>uwsgi.ini</code></p>\n<pre><code>[uwsgi]\nchdir = /root/mysite //项目根目录-要是绝对路径\nmodule = mysite.wsgi:application //指定wsgi模块\n\nsocket = 0.0.0.0:8000 //这里一定要和下面uginx的一致\n#vhost = true          //多站模式\n#no-site = true        //多站模式时不设置入口模块和  文件\n#workers = 2           //子进程数\n#reload-mercy = 10\n#vacuum = true         //退出、重启时清理文件\n#max-requests = 1000\n#limit-as = 512\n#buffer-size = 30000\n#pidfile = /var/run/uwsgi9090.pid    //pid文件，用于下脚本启动、停止该进程\ndaemonize = /home/feixue/python/www/for_test/run.log    // 日志文件这个文件一般是没有的要自己新建\ndisable-logging = true   //不记录正常信息，只记录错误信息</code></pre>\n<p>配置完就可以在本地跑了，不出意外的话，一般这里没啥意外，有的话可以看一下报错信息，<br>第一次配置的错误是chdir 路径填错了找不到</p>\n<h3 id=\"安装nginx和配置\">安装nginx和配置<a href=\"#安装nginx和配置\" title=\"安装nginx和配置\"></a></h3><p>nginx直接apt-get即可安装,主要配置在目录/etc/nginx/sites-available/default,关键配置如下</p>\n<pre><code># include snippets/snakeoil.conf;\n\n# root /var/www/html;\n\n# Add index.php to the list if you are using PHP\n# index index.html index.htm index.nginx-debian.html;\n\nserver_name _;\n\nlocation / {\n    # First attempt to serve request as file, then\n    # as directory, then fall back to displaying a 404.\n    # try_files $uri $uri/ =404;\n    include  uwsgi_params;\n            uwsgi_pass  0.0.0.0:8000; # 和uwsgi的是一样的  \n}\n# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</code></pre>\n<p>然后就是阿里云的安全组的问题，默认的阿里云是开放公网端口的所以需要，为nginx的80端口添加允许通过网关的安全组，在其中有一栏的端口要 <code>0.0.0.0：80</code>，开放之后即使不配置nginx 启动nginx，也可以通过公网ip加端口直接访问.</p>\n","prev":{"title":"闭包","link":"2019/09/27/闭包"},"next":{"title":"OSI","link":"2019/09/22/OSI"},"plink":"http://yoursite.com/2019/09/25/nginx+uwsgi_django配置/","toc":[{"id":"下载uwsgi","title":"下载uwsgi","index":"1"},{"id":"安装nginx和配置","title":"安装nginx和配置","index":"2"}]}