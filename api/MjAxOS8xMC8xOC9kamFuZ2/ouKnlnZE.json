{"title":"django踩坑","date":"2019-10-17T16:00:00.000Z","date_formatted":{"ll":"Oct 18, 2019","L":"10/18/2019","MM-DD":"10-18"},"link":"2019/10/18/django踩坑","tags":["Django"],"categories":["Django"],"updated":"2020-02-09T09:33:31.000Z","content":"<h2 id=\"django-踩坑记\">django 踩坑记<a href=\"#django-踩坑记\" title=\"django 踩坑记\"></a></h2><blockquote>\n<p>这里记录一点学习框架在使用中的一点坑</p>\n</blockquote>\n<h3 id=\"mysql的版本问题\">mysql的版本问题<a href=\"#mysql的版本问题\" title=\"mysql的版本问题\"></a></h3><p>django 和 mysql的版本不匹配的问题，也就是在django源码中的问题，django源码<br>中有对mysql版本的限制，所以一般需要对源码修改，很简单将报错的那句话个注视<br>掉，但我找到了一篇比较详细的解释，</p>\n<p><a href=\"https://www.cnblogs.com/sheshouxin/p/10920255.html\" target=\"_blank\">https://www.cnblogs.com/sheshouxin/p/10920255.html</a></p>\n<h3 id=\"数据库问题\">数据库问题<a href=\"#数据库问题\" title=\"数据库问题\"></a></h3><p>在数据库使用时要在<code>setting.py</code>的同级 <code>__init__.py</code>中添加如下语句使<br>mysql自动加载</p>\n<pre><code>import pymysql\npymysql .install_as_MySQLdb()</code></pre><h3 id=\"timezone\">timezone<a href=\"#timezone\" title=\"timezone\"></a></h3><p>在项目中使用时间的时候要使用django自带的时间，timezone，如果使用python<br>的时间和django时间交叉使用是有问题的。</p>\n<p>还有个细节就是就算你只是用python的时间，看起来是没有交叉使用的，但<br>如果在创建数据库的时候通过<code>models.DateTimeField(auto_now_add=True)</code><br>去创建时间字段的时候它默认的还是django的自带时间仍然和python的时间<br>相冲突，所以不要自找麻烦在整个项目中只用timezone来操作时间</p>\n<h3 id=\"django部署问题\">django部署问题<a href=\"#django部署问题\" title=\"django部署问题\"></a></h3><p>在django的部署过程中有有关问题</p>\n<ol><li>首先云服务器的问题，阿里的端口开放是需要加安全组的，mysql的3306,和<br>nginx的80端口，都是需要手动去添加安全组才能在公网访问的，</li>\n<li>在对用户注册是要给用户的注册邮箱发送邮件的时候，stmp的25端口被阿里云<br>给封了，所以需要换个端口比如 587, 然后还要将这个端口加入到安全组</li>\n</ol>","prev":{"title":"项目开发","link":"2019/10/26/项目开发"},"next":{"title":"模型评估","link":"2019/10/10/模型评估"},"plink":"http://yoursite.com/2019/10/18/django踩坑/","toc":[{"id":"django-踩坑记","title":"django 踩坑记","index":"1","children":[{"id":"mysql的版本问题","title":"mysql的版本问题","index":"1.1"},{"id":"数据库问题","title":"数据库问题","index":"1.2"},{"id":"timezone","title":"timezone","index":"1.3"},{"id":"django部署问题","title":"django部署问题","index":"1.4"}]}]}