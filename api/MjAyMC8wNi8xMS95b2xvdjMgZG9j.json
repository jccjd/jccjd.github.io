{"title":"yolov3 doc","date":"2020-06-10T16:00:00.000Z","date_formatted":{"ll":"Jun 11, 2020","L":"06/11/2020","MM-DD":"06-11"},"link":"2020/06/11/yolov3 doc","tags":["daily_work"],"categories":["Machine Learning"],"updated":"2020-06-17T03:02:25.277Z","content":"<h2 id=\"you-only-look-once-read\">YOU ONLY LOOK ONCE READ<a href=\"#you-only-look-once-read\" title=\"YOU ONLY LOOK ONCE READ\"></a></h2><h3 id=\"数据\">数据<a href=\"#数据\" title=\"数据\"></a></h3><ol><li>yolo使用的数据，图片和图片标注文件xml， 每个图片对应一个标注xml文件，创建自己的data 目录，文件结构为</li>\n</ol><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--mydata</span><br><span class=\"line\">|------JPEGImage # 图片</span><br><span class=\"line\">|------Annotations # 图片对应的xml</span><br><span class=\"line\">|------ImageSet</span><br><span class=\"line\">|-------------Main # 存放训练&#x2F;测试图片的名字</span><br></pre></td></tr></table></figure><p>2 . 生成 <code>train.txt</code>, <code>val.txt</code>, <code>test.txt</code>,<code>trainval.txt</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">trainval_percent = <span class=\"number\">0.1</span></span><br><span class=\"line\">train_percent = <span class=\"number\">0.9</span></span><br><span class=\"line\">xmlfilepath = <span class=\"string\">'Annotations'</span></span><br><span class=\"line\">txtsavepath = <span class=\"string\">'ImageSets\\Main'</span></span><br><span class=\"line\">total_xml = os.listdir(xmlfilepath)</span><br><span class=\"line\">num = len(total_xml)</span><br><span class=\"line\">list = range(num)</span><br><span class=\"line\">tv = int(num * trainval_percent)</span><br><span class=\"line\">tr = int(tv * train_percent)</span><br><span class=\"line\">trainval = random.sample(list, tv)</span><br><span class=\"line\">train = random.sample(trainval, tr)</span><br><span class=\"line\"></span><br><span class=\"line\">ftrainval = open(<span class=\"string\">'ImageSets/Main/trainval.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">ftest = open(<span class=\"string\">'ImageSets/Main/test.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">ftrain = open(<span class=\"string\">'ImageSets/Main/train.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">fval = open(<span class=\"string\">'ImageSets/Main/val.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list:</span><br><span class=\"line\">    name = total_xml[i][:<span class=\"number\">-4</span>] + <span class=\"string\">'\\n'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> trainval:</span><br><span class=\"line\">        ftrainval.write(name)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> train:</span><br><span class=\"line\">            ftest.write(name)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            fval.write(name)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        ftrain.write(name)</span><br><span class=\"line\"></span><br><span class=\"line\">ftrainval.close()</span><br><span class=\"line\">ftrain.close()</span><br><span class=\"line\">fval.close()</span><br><span class=\"line\">ftest.close()</span><br></pre></td></tr></table></figure><p>将xml转换成yolo支持的形式,官方提供了代码 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://pjreddie.com/media/files/voc_label.py</span><br></pre></td></tr></table></figure><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> os <span class=\"keyword\">import</span> listdir, getcwd</span><br><span class=\"line\"><span class=\"keyword\">from</span> os.path <span class=\"keyword\">import</span> join</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#源代码sets=[('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test')]</span></span><br><span class=\"line\">sets=[(<span class=\"string\">'myData'</span>, <span class=\"string\">'train'</span>)]  <span class=\"comment\"># 改成自己建立的myData</span></span><br><span class=\"line\"> </span><br><span class=\"line\">classes = [<span class=\"string\">\"person\"</span>, <span class=\"string\">\"foot\"</span>, <span class=\"string\">\"face\"</span>] <span class=\"comment\"># 改成自己的类别</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">convert</span><span class=\"params\">(size, box)</span>:</span></span><br><span class=\"line\">    dw = <span class=\"number\">1.</span>/(size[<span class=\"number\">0</span>])</span><br><span class=\"line\">    dh = <span class=\"number\">1.</span>/(size[<span class=\"number\">1</span>])</span><br><span class=\"line\">    x = (box[<span class=\"number\">0</span>] + box[<span class=\"number\">1</span>])/<span class=\"number\">2.0</span> - <span class=\"number\">1</span></span><br><span class=\"line\">    y = (box[<span class=\"number\">2</span>] + box[<span class=\"number\">3</span>])/<span class=\"number\">2.0</span> - <span class=\"number\">1</span></span><br><span class=\"line\">    w = box[<span class=\"number\">1</span>] - box[<span class=\"number\">0</span>]</span><br><span class=\"line\">    h = box[<span class=\"number\">3</span>] - box[<span class=\"number\">2</span>]</span><br><span class=\"line\">    x = x*dw</span><br><span class=\"line\">    w = w*dw</span><br><span class=\"line\">    y = y*dh</span><br><span class=\"line\">    h = h*dh</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x,y,w,h)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">convert_annotation</span><span class=\"params\">(year, image_id)</span>:</span></span><br><span class=\"line\">    in_file = open(<span class=\"string\">'myData/Annotations/%s.xml'</span>%(image_id))  <span class=\"comment\"># 源代码VOCdevkit/VOC%s/Annotations/%s.xml</span></span><br><span class=\"line\">    out_file = open(<span class=\"string\">'myData/labels/%s.txt'</span>%(image_id), <span class=\"string\">'w'</span>)  <span class=\"comment\"># 源代码VOCdevkit/VOC%s/labels/%s.txt</span></span><br><span class=\"line\">    tree=ET.parse(in_file)</span><br><span class=\"line\">    root = tree.getroot()</span><br><span class=\"line\">    size = root.find(<span class=\"string\">'size'</span>)</span><br><span class=\"line\">    w = int(size.find(<span class=\"string\">'width'</span>).text)</span><br><span class=\"line\">    h = int(size.find(<span class=\"string\">'height'</span>).text)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> root.iter(<span class=\"string\">'object'</span>):</span><br><span class=\"line\">        difficult = obj.find(<span class=\"string\">'difficult'</span>).text</span><br><span class=\"line\">        cls = obj.find(<span class=\"string\">'name'</span>).text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cls <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> classes <span class=\"keyword\">or</span> int(difficult)==<span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        cls_id = classes.index(cls)</span><br><span class=\"line\">        xmlbox = obj.find(<span class=\"string\">'bndbox'</span>)</span><br><span class=\"line\">        b = (float(xmlbox.find(<span class=\"string\">'xmin'</span>).text), float(xmlbox.find(<span class=\"string\">'xmax'</span>).text), float(xmlbox.find(<span class=\"string\">'ymin'</span>).text), float(xmlbox.find(<span class=\"string\">'ymax'</span>).text))</span><br><span class=\"line\">        bb = convert((w,h), b)</span><br><span class=\"line\">        out_file.write(str(cls_id) + <span class=\"string\">\" \"</span> + <span class=\"string\">\" \"</span>.join([str(a) <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> bb]) + <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">wd = getcwd()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span> year, image_set <span class=\"keyword\">in</span> sets:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(<span class=\"string\">'myData/labels/'</span>):  <span class=\"comment\"># 改成自己建立的myData</span></span><br><span class=\"line\">        os.makedirs(<span class=\"string\">'myData/labels/'</span>)</span><br><span class=\"line\">    image_ids = open(<span class=\"string\">'myData/ImageSets/Main/%s.txt'</span>%(image_set)).read().strip().split()</span><br><span class=\"line\">    list_file = open(<span class=\"string\">'myData/%s_%s.txt'</span>%(year, image_set), <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> image_id <span class=\"keyword\">in</span> image_ids:</span><br><span class=\"line\">        list_file.write(<span class=\"string\">'%s/myData/JPEGImages/%s.jpg\\n'</span>%(wd, image_id))</span><br><span class=\"line\">        convert_annotation(year, image_id)</span><br><span class=\"line\">    list_file.close()</span><br></pre></td></tr></table></figure><h3 id=\"参数配置\">参数配置<a href=\"#参数配置\" title=\"参数配置\"></a></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> classes= <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"number\">2</span> train  = &lt;path-to-voc&gt;/train.txt</span><br><span class=\"line\"><span class=\"number\">3</span> valid  = &lt;path-to-voc&gt;<span class=\"number\">2007</span>_test.txt</span><br><span class=\"line\"><span class=\"number\">4</span> names = data/voc.names</span><br><span class=\"line\"><span class=\"number\">5</span> backup = backup</span><br></pre></td></tr></table></figure>","prev":{"title":"learn_note_06","link":"2020/06/19/learn_note_06"},"next":{"title":"Hello World","link":"2020/03/24/hello-world"},"plink":"http://yoursite.com/2020/06/11/yolov3 doc/","toc":[{"id":"you-only-look-once-read","title":"YOU ONLY LOOK ONCE READ","index":"1","children":[{"id":"数据","title":"数据","index":"1.1"},{"id":"参数配置","title":"参数配置","index":"1.2"}]}]}