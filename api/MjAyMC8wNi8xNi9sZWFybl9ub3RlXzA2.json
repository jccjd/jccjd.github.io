{"title":"learn_note_06","date":"2020-06-15T16:00:00.000Z","date_formatted":{"ll":"Jun 16, 2020","L":"06/16/2020","MM-DD":"06-16"},"link":"2020/06/16/learn_note_06","tags":["daily_work"],"categories":["Machine Learning"],"updated":"2020-06-17T03:03:18.597Z","content":"<h3 id=\"安装cuda\">安装cuda<a href=\"#安装cuda\" title=\"安装cuda\"></a></h3><p>Ubuntu 20.04 下使用 <code>pytorch</code>GPU版</p>\n<ol><li><p>下载Linux对应的驱动，查看本机显卡能够配置的驱动信息，recommended为推荐安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu-drivers devices</span><br><span class=\"line\"><span class=\"comment\"># vendor   : NVIDIA Corporation</span></span><br><span class=\"line\"><span class=\"comment\"># model    : GP107 [GeForce GTX 1050 Ti]</span></span><br><span class=\"line\"><span class=\"comment\"># driver   : nvidia-driver-435 - distro non-free</span></span><br><span class=\"line\"><span class=\"comment\"># driver   : nvidia-driver-390 - distro non-free</span></span><br><span class=\"line\"><span class=\"comment\"># driver   : nvidia-driver-440 - distro non-free recommended</span></span><br><span class=\"line\"><span class=\"comment\"># driver   : xserver-xorg-video-nouveau - distro free builtin</span></span><br></pre></td></tr></table></figure></li>\n<li><p>下载cuda, Ubuntu 20.04 可以用Ubuntu18.04的版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://developer.download.nvidia.com/compute/cuda/11.0.1/local_installers/cuda_11.0.1_450.36.06_linux.run</span><br></pre></td></tr></table></figure></li>\n<li><p>gcc降级</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install gcc-7 g++-7</span><br><span class=\"line\"><span class=\"comment\"># 切换版本</span></span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100</span><br><span class=\"line\">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 50</span><br></pre></td></tr></table></figure></li>\n</ol><ol><li><p>安装<br> cuda安装包里有显卡驱动，之前安装过了，有一项driver要去掉</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sh cuda_11.0.1_450.36.06_linux.run</span><br></pre></td></tr></table></figure></li>\n<li><p>配置环境变量, 在<code>~/.bashrc</code>下最后一行添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cuda-version=9.0, 10.0, 11.0 填自己的cuda-version</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">\"/usr/local/cuda-version/bin:<span class=\"variable\">$PATH</span>\"</span> </span><br><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH=<span class=\"string\">\"/usr/local/cuda-version/lib64:<span class=\"variable\">$LD_LIBRARY_PATH</span>\"</span></span><br></pre></td></tr></table></figure></li>\n<li><p>检验</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvcc -V</span><br></pre></td></tr></table></figure></li>\n</ol><h3 id=\"根据xml分割图像\">根据xml分割图像<a href=\"#根据xml分割图像\" title=\"根据xml分割图像\"></a></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">wd = os.getcwd()</span><br><span class=\"line\">data_dir = os.path.join(wd, <span class=\"string\">'train/'</span>)</span><br><span class=\"line\">data_content_list = os.listdir(data_dir)</span><br><span class=\"line\">xmls_name = [i.split(<span class=\"string\">'.'</span>)[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data_content_list <span class=\"keyword\">if</span> i.endswith(<span class=\"string\">\".xml\"</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> xmlname <span class=\"keyword\">in</span> xmls_name:</span><br><span class=\"line\">    tree = ET.parse(data_dir + xmlname + <span class=\"string\">'.xml'</span>)</span><br><span class=\"line\">    root = tree.getroot()</span><br><span class=\"line\"></span><br><span class=\"line\">    image_count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> root.iter(<span class=\"string\">'object'</span>):</span><br><span class=\"line\">        image_label = obj.find(<span class=\"string\">'name'</span>).text</span><br><span class=\"line\">        bndbox = obj.find(<span class=\"string\">'bndbox'</span>)</span><br><span class=\"line\">        image_box = [int(bndbox.find(<span class=\"string\">'xmin'</span>).text), int(bndbox.find(<span class=\"string\">'xmax'</span>).text), int(bndbox.find(<span class=\"string\">'ymin'</span>).text), int(bndbox.find(<span class=\"string\">'ymax'</span>).text)]</span><br><span class=\"line\">        img = cv2.imread( data_dir + xmlname+<span class=\"string\">'.AIpng'</span>)</span><br><span class=\"line\">        y0 = image_box[<span class=\"number\">0</span>]</span><br><span class=\"line\">        y1 = image_box[<span class=\"number\">1</span>]</span><br><span class=\"line\">        x0 = image_box[<span class=\"number\">2</span>]</span><br><span class=\"line\">        x1 = image_box[<span class=\"number\">3</span>]</span><br><span class=\"line\">        <span class=\"comment\"># 直接裁剪</span></span><br><span class=\"line\">        cropped = img[x0:x1, y0:y1]  <span class=\"comment\"># 裁剪坐标为[y0:y1, x0:x1]</span></span><br><span class=\"line\">        newname = xmlname + str(image_count) + <span class=\"string\">'.png'</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> image_label == <span class=\"string\">'normal'</span>:</span><br><span class=\"line\">            cv2.imwrite(wd+<span class=\"string\">'/mydata/nml/'</span>+ newname, cropped)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            cv2.imwrite(wd+<span class=\"string\">'/mydata/dic/'</span>+ newname, cropped)</span><br><span class=\"line\">        image_count += <span class=\"number\">1</span></span><br><span class=\"line\">    print(xmlname +<span class=\"string\">\"images--&gt;\"</span>+ str(image_count))</span><br></pre></td></tr></table></figure><h3 id=\"tmux\">tmux<a href=\"#tmux\" title=\"tmux\"></a></h3><div class=\"φcz\"><div class=\"φdb\"><table><thead><tr>\n<th align=\"center\"><code>ctrl-b</code> + <code>&quot;</code></th><th align=\"center\">当前面板上下一分为二，下侧新建面板(C-b 按后等1秒)</th></tr>\n</thead><tbody><tr>\n<td align=\"center\"><code>ctrl-b</code> + <code>%</code></td><td align=\"center\">当前面板上下一分为二，下侧新建面板(C-b 按后等1秒)</td></tr>\n<tr>\n<td align=\"center\"></td><td align=\"center\"></td></tr>\n</tbody></table></div></div><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmux new -s demo <span class=\"comment\"># 新建窗口 tmux 默认为0号</span></span><br><span class=\"line\">tmux a -t demo <span class=\"comment\"># 进入</span></span><br><span class=\"line\"><span class=\"comment\"># vi ~/.tmux.conf 启用鼠标</span></span><br><span class=\"line\"><span class=\"built_in\">set</span>-option -g mouse on</span><br></pre></td></tr></table></figure>","prev":{"title":"Untitled 1","link":"2020/06/16/Untitled 1"},"next":{"title":"yolov3 doc","link":"2020/06/11/yolov3 doc"},"plink":"http://yoursite.com/2020/06/16/learn_note_06/","toc":[{"id":"安装cuda","title":"安装cuda","index":"1"},{"id":"根据xml分割图像","title":"根据xml分割图像","index":"2"},{"id":"tmux","title":"tmux","index":"3"}],"copyright":{"link":"<a href=\"http://yoursite.com/2020/06/16/learn_note_06/\" title=\"learn_note_06\">http://yoursite.com/2020/06/16/learn_note_06/</a>","license":"自由转载-非商用-禁止演绎-保持署名 (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}